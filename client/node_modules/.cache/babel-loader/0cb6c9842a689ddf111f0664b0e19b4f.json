{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Documents\\\\Minor_Project\\\\client\\\\src\\\\components\\\\Admin\\\\Admin login\\\\adminLogin.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"../Admin login/adminlogin.css\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AdminLogin = props => {\n  _s();\n\n  let history = useHistory();\n  const [loader1, setLoader1] = useState(false);\n  const [formdata1, setFormdata1] = useState({\n    email: \"\",\n    password: \"\"\n  });\n\n  const changeFormData1 = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setFormdata1({ ...formdata1,\n      [name]: value\n    });\n  };\n\n  const signIn = async () => {\n    setLoader1(true);\n\n    try {\n      console.log(\"data\", formdata1);\n      const response1 = await axios.post(`${REACT_APP_URL}/api/user/login`, formdata1);\n      console.log(\"response 1\", response1);\n      const userType = response1.data.user.userType;\n      console.log(userType, \"user type\");\n      const admin = response1.data.user;\n      console.log('What is the usertype : ', userType);\n\n      if (userType === \"admin\") {\n        toast.success(\"Successfully logged in !!!\");\n        history.push(\"/Admin/home\");\n        window.location.href = '/Admin/home';\n        localStorage.setItem(\"isLoggedIn\", true);\n        localStorage.setItem(\"userType\", userType);\n        localStorage.setItem(\"token\", response1.data.token);\n      } else {\n        toast.error(\"Login as a Admin\");\n      }\n\n      setLoader1(false);\n      toast.success(\"Successfully logged in\");\n    } catch (error) {\n      setLoader1(false);\n      console.log(\"error\", error);\n      toast.error(\"error in logging in\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"adminLogin\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        value: formdata1.value,\n        onChange: changeFormData1,\n        placeholder: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        value: formdata1.value,\n        onChange: changeFormData1,\n        placeholder: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: signIn,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), loader1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loaderHead\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loader\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AdminLogin, \"JX35Fcc5TM5kR6zwKl17H71hZeg=\", false, function () {\n  return [useHistory];\n});\n\n_c = AdminLogin;\nexport default AdminLogin;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminLogin\");","map":{"version":3,"sources":["C:/Users/Lenovo/Documents/Minor_Project/client/src/components/Admin/Admin login/adminLogin.jsx"],"names":["axios","React","useState","useHistory","toast","AdminLogin","props","history","loader1","setLoader1","formdata1","setFormdata1","email","password","changeFormData1","e","name","target","value","signIn","console","log","response1","post","REACT_APP_URL","userType","data","user","admin","success","push","window","location","href","localStorage","setItem","token","error"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\"\r\n\r\nimport \"../Admin login/adminlogin.css\"\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst AdminLogin = (props) => {\r\n    let history = useHistory();\r\n    const [loader1, setLoader1] = useState(false);\r\n    const [formdata1, setFormdata1] = useState({\r\n        email: \"\",\r\n        password: \"\",\r\n\r\n    });\r\n    const changeFormData1 = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        setFormdata1({ ...formdata1, [name]: value });\r\n    }\r\n     const signIn = async () => {\r\n        setLoader1(true)\r\n        try {\r\n            console.log(\"data\", formdata1);\r\n            const response1 = await axios.post(`${REACT_APP_URL}/api/user/login`, formdata1);\r\n            console.log(\"response 1\", response1);\r\n            const userType = response1.data.user.userType;\r\n            console.log(userType, \"user type\")\r\n            const admin = response1.data.user\r\n\r\n            console.log('What is the usertype : ', userType) ;\r\n            if (userType === \"admin\") {\r\n                toast.success(\"Successfully logged in !!!\");\r\n             history.push(\"/Admin/home\")\r\n                window.location.href = '/Admin/home' ;\r\n\r\n                localStorage.setItem(\"isLoggedIn\", true)\r\n               localStorage.setItem(\"userType\", userType)\r\n                localStorage.setItem(\"token\", response1.data.token)\r\n\r\n            }\r\n            else {\r\n                toast.error(\"Login as a Admin\")\r\n            }\r\n            setLoader1(false)\r\n            toast.success(\"Successfully logged in\");\r\n        } catch (error) {\r\n            setLoader1(false)\r\n            console.log(\"error\", error)\r\n            toast.error(\"error in logging in\")\r\n        }\r\n    }\r\n    return (\r\n\r\n        <div className=\"admin\">\r\n            <div className=\"adminLogin\">\r\n                <input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    value={formdata1.value}\r\n                    onChange={changeFormData1}\r\n                    placeholder=\"Email\"></input>\r\n                <input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    value={formdata1.value}\r\n                    onChange={changeFormData1}\r\n                    placeholder=\"Password\"></input>\r\n                <div>\r\n                    <button onClick={signIn} >Login</button>\r\n                    {loader1 ? (\r\n                        <div className=\"loaderHead\">\r\n                            <div className=\"loader\"></div>\r\n                        </div>\r\n                    ) : null\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default AdminLogin;"]},"metadata":{},"sourceType":"module"}